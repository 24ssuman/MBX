name: MBX testing suite

on:
  workflow_dispatch:
  push:
    branches:
      - "master"
      - "master-dev"
  pull_request:
    branches:
      - "master"
      - "master-dev"
  schedule:
    # Nightly tests run on master by default:
    #   Scheduled workflows run on the latest commit on the default or base branch.
    #   (from https://help.github.com/en/actions/reference/events-that-trigger-workflows#scheduled-events-schedule)
    - cron: "0 0 * * *"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  compile-and-test-mbx:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        compiler: [g++, icpc]
    steps:
      - run: echo "The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub!"
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."
      - run: echo "Using compiler ${{matrix.compiler}}"
      - name: install-dependencies
        run: |
          sudo apt-get update -y
          sudo apt-get install -y fftw3-dev
          sudo apt-get install libgsl-dev
          sudo apt-get install autoconf -y
          
      - name: install-compiler g++
        if: matrix.compiler == 'g++'
        run: |
          sudo apt-get install g++-9 gcc-9 -y
          sudo apt-get install openmpi-bin libopenmpi-dev -y
          
      - name: install-compiler icpc
        if: matrix.compiler == 'icpc'
        run: |
          wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          rm GPG-PUB-KEY-INTEL-SW-PRODUCTS.PUB
          sudo echo "deb https://apt.repos.intel.com/oneapi all main" | sudo tee /etc/apt/sources.list.d/oneAPI.list
          sudo apt-get update
          sudo apt-get install -y intel-oneapi-hpckit
          sudo apt-get install -y intel-oneapi-mkl
          icpc -v

      - name: Check out repository code
        uses: actions/checkout@v3
      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."
      - run: echo "The workflow is now ready to test your code on the runner."

      - name: run-install
        run: |
          ls ${{ github.workspace }}
          rm -rf install
          autoreconf -fi
          ./configure --disable-optimization --enable-coverage CXX=${{matrix.compiler}}
          make install

      - run: echo "This job's status is ${{ job.status }}."

      - run: echo "Running unittests"
      - run: ls ${{ github.workspace }}
      - name: unittests
        run: make check

      - name: Submit to codecov.io
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          
