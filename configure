#!/bin/bash

rm -f include.sh

if [ -z "$FFTW_HOME" ]; then
  echo "Where are the include and lib folders for FFTW?"
  read FFTW_HOME
fi

if [ -z "$GSL_ROOT_DIR" ]; then
  echo "Where are the include and lib folders for GLS?"
  read GSL_ROOT_DIR
fi

if [ -z "$CMAKE_EXE" ]; then
  echo "Where is the CMake executable?"
  read CMAKE_EXE
  if [ "$CMAKE_EXE" == "" ]; then
    CMAKE_EXE=cmake
  fi
fi

if [ -z "$MBX_CXX" ]; then
  echo "Which C++ compiler do you want to use?"
  read MBX_CXX
fi 

if [ -z "$MBX_CC" ]; then
  echo "Which C compiler do you want to use?"
  read MBX_CC
fi 

if [ -z "$MBX_FC" ]; then
  echo "Which Fortran compiler do you want to use?"
  read MBX_FC
fi 

if [ -z "$USE_MPI" ]; then
  USE_MPI=0
  if echo $MBX_CXX | grep -q "mpi" ; then
    USE_MPI=1
  fi
fi

if [ -z "$USE_OPENMP" ]; then
  echo "USE_OPENMP is not set. Defaulted to 1. "
  USE_OPENMP=1
fi

if [ -z "$OPT_LEVEL" ]; then
  echo "Which optimization level do you want to use? [0/1/2/3]"
  read n
  OPT_LEVEL="-O$n"
fi

if [ -z "$PLUMED_HOME" ]; then
  echo "Where is the home folder for PLUMED?"
  read PLUMED_HOME
fi

if [[ -z "$LAMMPS_HOME" && $USE_MPI -eq 1 ]]; then
  echo "Which is the home folder for LAMMPS?"
  read LAMMPS_HOME
  if [ -z "$LAMMPS_HOME" ]; then 
    echo "Sorry, compilation with MPI without LAMMPS is not supported"
    exit
  fi
fi

if [ -z $MBX_BINDIR ]; then
  echo "Where do you want the main executables?"
  read MBX_BINDIR
fi

MBX_HOME=$PWD

# Generate the include.sh file
cat << EOF > include.sh
#!/bin/bash

export FFTW_HOME=$FFTW_HOME
export GSL_ROOT_DIR=$GSL_ROOT_DIR
export CMAKE_EXE=$CMAKE_EXE
export MBX_CXX=$MBX_CXX
export MBX_CC=$MBX_CC
export MBX_FC=$MBX_FC
export USE_MPI=$USE_MPI
export USE_OPENMP=$USE_OPENMP
export OPT_LEVEL=$OPT_LEVEL
export MBX_HOME=$MBX_HOME
export LAMMPS_HOME=$LAMMPS_HOME
export PLUMED_HOME=$PLUMED_HOME
export MBX_BINDIR=$MBX_BINDIR
EOF

